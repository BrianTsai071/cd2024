<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>協同產品設計實習</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2024-05-17T07:19:35+08:00</updated><entry><title>2024 Spring 課程w3</title><link href="./2024-Spring-w3-blog-tutorial.html" rel="alternate"></link><published>2024-03-09T11:00:00+08:00</published><updated>2024-05-17T06:02:47+08:00</updated><author><name>41023249</name></author><id>tag:None,2024-03-09:./2024-Spring-w3-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;

&lt;h3&gt;第三週協同產品設計實習大綱&lt;/h3&gt;
&lt;h4&gt;1. 善用 GitHub Codespaces 與 Gitpod&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;介紹 GitHub Codespaces&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;每月 120 core hours 免費使用&lt;/li&gt;
&lt;li&gt;建議僅在需要轉檔或編輯時啟用，以最佳化使用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;介紹 Gitpod&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;與 GitHub Codespaces 類似，使用 Visual Studio Code 網頁介面&lt;/li&gt;
&lt;li&gt;運行個人 cd2024 倉儲的設定&lt;/li&gt;
&lt;li&gt;分組倉儲的 SSH 設定與維護&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;2. 將組員倉儲設為分組倉儲的子模組&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;設定子模組的指令&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;在分組倉儲目錄下執行 &lt;code&gt;git submodule add 組員的個人倉儲網址 組員的學號&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;範例: &lt;code&gt;git submodule add https://github.com/scrum-1/cd2024.git 41023249&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;子模組的優點&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;組員自行管理個人倉儲&lt;/li&gt;
&lt;li&gt;自行決定整合版本&lt;/li&gt;
&lt;li&gt;簡化資料導入分組網站的過程&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;3. LaTeX 轉 PDF 機制&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LaTeX 文件編輯與轉檔&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;利用 xelatex.exe 編譯 .tex 文件&lt;/li&gt;
&lt;li&gt;生成 .pdf 文件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;範例與教學影片&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;示範如何在 Windows 環境下編譯 LaTeX 文件&lt;/li&gt;
&lt;li&gt;解決編譯過程中的常見問題&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用 GitHub Actions 進行自動轉檔&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;.github/workflows/main.yml 設定範例&lt;/li&gt;
&lt;li&gt;轉檔目錄結構：latex 目錄與 downloads 目錄&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;4. 啟動期中分組報告的製作&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;分工翻譯與編輯報告&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;以 LaTeX 格式分工完成英文與中文翻譯&lt;/li&gt;
&lt;li&gt;在分組網站的 Release 或 downloads 區發布報告&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;協同編輯與衝突解決&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;.tex 文件的純文字編輯&lt;/li&gt;
&lt;li&gt;多人協同編輯時的衝突解決&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;5. 使用 Replit 維護分組倉儲&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Replit 環境介紹&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;基本操作與維護方法&lt;/li&gt;
&lt;li&gt;.ssh 目錄的管理&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;6. CD2024 期中分組倉儲與網站&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;建立分組網站與倉儲&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;使用 Brython 程式語法生成連結內容&lt;/li&gt;
&lt;li&gt;範例程式碼提供&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Brython 程式碼示範&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;自動生成分組網站與倉儲的連結&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;7. 期中分組報告範本&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LaTeX 報告範本&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;下載與使用說明&lt;/li&gt;
&lt;li&gt;miktex-portable.7z 與 latex_images_github.7z 下載&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;8. 在電腦教室中的協同設計&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;各組員維護個人與分組倉儲&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;利用 Token 或 SSH 授權&lt;/li&gt;
&lt;li&gt;git clone 指令範例&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;9. 其他工具與參考資料&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;OnShape 帳號與 MKCad Library 使用&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;網頁設計與產品建模&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CoppeliaSim&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;下載與使用說明&lt;/li&gt;
&lt;li&gt;結合可攜程式環境進行機電系統設計與模擬&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;10. 相關連結與資料&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;參考資料&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Odoo PLM 功能與使用介紹&lt;/li&gt;
&lt;li&gt;英文單字查詢工具&lt;/li&gt;
&lt;li&gt;GitHub Actions 配置範例&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;完整範例文件與資源&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;可攜程式環境下載&lt;/li&gt;
&lt;li&gt;協同報告範本下載&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;詳細說明&lt;/h3&gt;
&lt;h4&gt;善用 GitHub Codespaces 與 Gitpod&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;介紹 GitHub Codespaces&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Codespaces 是一個雲端開發環境，允許開發者在瀏覽器中編寫、測試和調試代碼。&lt;/li&gt;
&lt;li&gt;每月 120 core hours 的免費配額允許用戶高效利用資源。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用策略：僅在需要進行文件轉檔或進行大量編輯時啟用，其他時候使用本地編輯工具。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;介紹 Gitpod&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Gitpod 是類似於 GitHub Codespaces 的工具，使用 Visual Studio Code 的網頁介面。&lt;/li&gt;
&lt;li&gt;用於管理和編輯個人的 cd2024 倉儲。&lt;/li&gt;
&lt;li&gt;分組倉儲需設置 SSH 許可權來進行管理。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;將組員倉儲設為分組倉儲的子模組&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;設定子模組的指令&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;在分組倉儲的根目錄中，運行以下命令來添加子模組：
    &lt;code&gt;sh
    git submodule add &amp;lt;組員的個人倉儲網址&amp;gt; &amp;lt;組員的學號&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;例如：
    &lt;code&gt;sh
    git submodule add https://github.com/scrum-1/cd2024.git 41023249&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;子模組的優點&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;各組員可以自行管理和更新個人倉儲，無需同步到分組倉儲。&lt;/li&gt;
&lt;li&gt;子模組的獨立性讓組員可以單獨測試和修改自己的代碼。&lt;/li&gt;
&lt;li&gt;簡化資料的整合過程，只需更新子模組即可同步最新內容。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;LaTeX 轉 PDF 機制&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LaTeX 文件編輯與轉檔&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;LaTeX 是一個基於 TeX 的排版系統，適用於專業文檔和學術論文的編輯。&lt;/li&gt;
&lt;li&gt;在 Windows 環境中，使用 MiKTeX 編譯 LaTeX 文件，生成 PDF 報告。&lt;/li&gt;
&lt;li&gt;主要步驟包括編輯 &lt;code&gt;.tex&lt;/code&gt; 文件，然後使用 &lt;code&gt;xelatex.exe&lt;/code&gt; 進行編譯：
    &lt;code&gt;sh
    xelatex &amp;lt;filename&amp;gt;.tex&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;範例與教學影片&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;教學影片詳細說明如何下載、安裝和使用 MiKTeX。&lt;/li&gt;
&lt;li&gt;解決常見的編譯錯誤和問題。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用 GitHub Actions 進行自動轉檔&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;配置 GitHub Actions 來自動化 LaTeX 文件的編譯和 PDF 生成。&lt;/li&gt;
&lt;li&gt;範例配置文件 &lt;code&gt;.github/workflows/main.yml&lt;/code&gt; 可參考：
    &lt;code&gt;yaml
    name: LaTeX Build
    on: [push]
    jobs:
      build:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v2
        - name: Setup LaTeX
          run: sudo apt-get install -y texlive-full
        - name: Compile LaTeX
          run: xelatex main.tex&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;啟動期中分組報告的製作&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;分工翻譯與編輯報告&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;組員分工完成英文和中文的翻譯與編輯。&lt;/li&gt;
&lt;li&gt;使用 LaTeX 格式撰寫報告，最終生成 PDF 文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;協同編輯與衝突解決&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;.tex 文件的純文字格式有助於版本控制和衝突解決。&lt;/li&gt;
&lt;li&gt;在 Git 中協同編輯時，可以清楚地看到和解決衝突。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;使用 Replit 維護分組倉儲&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Replit 環境介紹&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Replit 是一個在線開發環境，支持多種編程語言和框架。&lt;/li&gt;
&lt;li&gt;可以方便地在瀏覽器中編輯和運行代碼。&lt;/li&gt;
&lt;li&gt;免費帳號的 .ssh 目錄管理和維護需要注意。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;CD2024 期中分組倉儲與網站&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;建立分組網站與倉儲&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;使用 Brython 程式語法生成期中分組倉儲和網站的連結。&lt;/li&gt;
&lt;li&gt;範例程式碼展示如何自動生成連結列表。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;範例程式碼&lt;/strong&gt;：
    ```python
    from browser import document, html
    brython_div = document["brython_div1"]
    div = "a"
    org = "mdecd2024"
    midterm = "mid" + div + "g"
    group_num = 8
    for i in range(1,group_num+1):
        site_url = "https://" + org + ".github.io/&lt;/li&gt;
&lt;/ul&gt;</content><category term="w3"></category><category term="網誌編寫"></category><category term="pelican"></category></entry><entry><title>2024 Spring 課程w2-2</title><link href="./2024-Spring-w2-2-blog-tutorial.html" rel="alternate"></link><published>2024-03-01T11:00:00+08:00</published><updated>2024-04-26T06:55:20+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-03-01:./2024-Spring-w2-2-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;


&lt;h1&gt;利用 Github Classroom 指定分組倉儲&lt;/h1&gt;
&lt;p&gt;由於各分組網站從 Github Classroom 執行配置, 因此該倉儲位於 mdecd2024 帳號下, 雖然各組組員具備對此分組倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH.&lt;/p&gt;
&lt;p&gt;根據上述流程, 可以在 Replit 中以 SSH 模式取得對 Github 帳號下特定倉儲的改版全縣, 只不過 Replit 的免費帳號環境會不定時刪除 /home/runner/.ssh 目錄中的授權資料, 因此若要使用 Replit 維護從 Github Classroom 取得授權的分組倉儲, 必須使用程式方法配置 .ssh 中的 id_rsa 與 config 檔案.&lt;/p&gt;
&lt;p&gt;範例分組倉儲: https://github.com/mdecd2024/test-ag1&lt;/p&gt;
&lt;p&gt;期中分組作業名稱甲班為 2a, 其中甲班第一組組長必須建立名稱為 midag1 的 Team, 讓第一組的組員員加入. 其餘各組的期中報告 Team 名稱則分別為 midag2, midag3 ....&lt;/p&gt;
&lt;p&gt;根據上述規劃, 甲班第一分組的期中協同倉儲將位於: https://github.com/mdecd2024/2a-midag1, 第一組的期中報告網站將位於: https://mdecd2024.github.io/2a-midag1.&lt;/p&gt;
&lt;p&gt;說明甲班第一組組長如何建立 midag1 Team, 並利用 Codespaces 維護 2a-midag1 分組倉儲&lt;/p&gt;
&lt;p&gt;說明如何利用 Replit 管理從 Classroom 取得的分組倉儲&lt;/p&gt;
&lt;p&gt;待各分組的期中報告 Team 與倉儲全部建立就緒後, 則甲班學員後續可配合期末作業名稱 2a2, 由甲班各組組長建立 Team finalag1, finalag2 ....等.
利用 Codespaces 維護倉儲與網站&lt;/p&gt;
&lt;h1&gt;說明如何利用 Github Codespaces 維護網站內容&lt;/h1&gt;</content><category term="w2-2"></category><category term="網誌編寫"></category><category term="pelican"></category></entry><entry><title>2024 Spring 課程w2-1</title><link href="./2024-Spring-w2-1-blog-tutorial.html" rel="alternate"></link><published>2024-02-23T11:00:00+08:00</published><updated>2024-05-17T07:15:18+08:00</updated><author><name>41023249</name></author><id>tag:None,2024-02-23:./2024-Spring-w2-1-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;


&lt;h1&gt;利用 Codespaces 維護倉儲與網站&lt;/h1&gt;
&lt;p&gt;由於 Github Codespaces 免費帳號目前每月可以使用 120 core hours, 因此使用者可以選擇在 Github 倉儲中編輯 markdown 目錄中的網誌 .md 文章後, 只在需要利用 pelican 轉檔或啟動編輯 config/content.htm 與轉靜態網頁內容時, 才啟用 Codespaces. 如此可以最佳化使用 Codespaces 的免費 core hours.&lt;/p&gt;</content><category term="w2-1"></category><category term="網誌編寫"></category><category term="pelican"></category></entry><entry><title>2024 Spring 課程w4</title><link href="./2024-Spring-w4-blog-tutorial.html" rel="alternate"></link><published>2024-02-23T11:00:00+08:00</published><updated>2024-05-17T07:19:35+08:00</updated><author><name>41023249</name></author><id>tag:None,2024-02-23:./2024-Spring-w4-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;

&lt;h3&gt;第四週協同產品設計實習詳細大綱&lt;/h3&gt;
&lt;h4&gt;一、概述&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;目標&lt;/strong&gt;：明確界定各分組的任務需求與分工時序，使用 SourceTree 和 Git Branch 優化協同設計流程。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;工具&lt;/strong&gt;：SourceTree、Git Branch、GitHub、Replit、Codespaces、Gitpod、localhost。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;二、工具與方法介紹&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;SourceTree&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;用途：視覺化管理 Git 倉儲，清晰查看改版歷程。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;操作：如何安裝、連接到遠端倉儲，基本操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Git Branch&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;用途：減少合併衝突，管理階段性改版內容。&lt;/li&gt;
&lt;li&gt;操作：創建、切換、合併分支的具體步驟。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;三、任務需求與分工時序&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;界定需求&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每個分組需明確界定任務需求，包括教學影片字幕、逐字稿、摘要說明等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;分工時序&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;各分組成員的具體分工及工作進度安排。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;四、教學影片整理與自評&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;任務&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;為教學影片添加字幕。&lt;/li&gt;
&lt;li&gt;整理出逐字稿並放置在影片下方，以 .txt 連結方式安排。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;編寫教學影片的摘要。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;自評&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;分組內部進行自評，確保任務完成質量。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;五、GitHub 個人與分組倉儲維護&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;倉儲結構&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;個人倉儲：&lt;code&gt;cd2024&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分組倉儲：&lt;code&gt;mdecd2024&lt;/code&gt;，命名規則 &lt;code&gt;2a-midag&amp;lt;組別&amp;gt;&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;子模組設置&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;將個人倉儲設為分組倉儲的子模組，便於各組員自行管理和維護。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;六、資料管理&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;類型&lt;/strong&gt;：&lt;/li&gt;
&lt;li&gt;文字資料（含 LaTeX 報告章節）&lt;/li&gt;
&lt;li&gt;零組件檔案、工程圖、組立圖（含 BOM 與爆炸圖）&lt;/li&gt;
&lt;li&gt;教學影片、操作流程錄製影片或 Wink 資料。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;七、倉儲維護方式介紹&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Replit&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;歷史及用途介紹。&lt;/li&gt;
&lt;li&gt;免費帳號限制及使用方法。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;動態與靜態網站維護的具體步驟及注意事項。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Codespaces&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;使用方法及限制介紹。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;動態與靜態網站維護的具體操作步驟。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Gitpod&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;使用方法及免費授權時間限制。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;動態與靜態網站維護的具體操作步驟。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;localhost&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;使用可攜程式系統維護倉儲。&lt;/li&gt;
&lt;li&gt;動態與靜態網站維護的具體操作步驟。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;八、NX 繪圖協同設計&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;軟體版本&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;各版本 NX 的安裝與啟動方法。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;USB 隨身碟啟動批次檔案配置。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;協同設計&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;不同版本 NX 的協同設計方法及注意事項。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;九、討論與反思&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;留言系統&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用留言系統進行討論，交流實習過程中的問題和經驗。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;反思&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;根據反思一和反思二，理解協同設計的重要性和團隊合作的必要性。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;十、參考資源&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;學長推甄研究所資訊&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;使用 Team code: &lt;code&gt;n9k585c&lt;/code&gt; 進入查看。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;十一、實習總結&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;總結本週實習成果&lt;/strong&gt;，進行經驗交流和總結。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;詳細內容與操作說明&lt;/h3&gt;
&lt;h4&gt;一、SourceTree 使用教程&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;安裝與設置&lt;/li&gt;
&lt;li&gt;如何下載並安裝 SourceTree。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何連接到 GitHub 倉儲。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基本操作&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;如何查看改版歷程。&lt;/li&gt;
&lt;li&gt;如何進行分支管理。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;二、Git Branch 操作指導&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;創建分支&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何在本地創建新分支。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;切換分支&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何切換到不同的分支。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;合併分支&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;如何合併分支並解決衝突。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;三、教學影片整理與自評步驟&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;添加字幕&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用軟件添加字幕的具體步驟。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;整理逐字稿&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何從字幕中整理出逐字稿。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;編寫摘要&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;如何編寫影片教學重點摘要。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;四、GitHub 倉儲維護具體步驟&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;設置子模組&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何將個人倉儲設為分組倉儲的子模組。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分組倉儲管理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;如何管理和維護分組倉儲。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;五、Replit 詳細使用說明&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;動態網站&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何在 Replit 上運行動態網站。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;靜態網站&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;如何在 Replit 上運行靜態網站。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;六、Codespaces 詳細使用說明&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;動態網站&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何在 Codespaces 上運行動態網站。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;靜態網站&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;如何在 Codespaces 上運行靜態網站。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;七、Gitpod 詳細使用說明&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;動態網站&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何在 Gitpod 上運行動態網站。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;靜態網站&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;如何在 Gitpod 上運行靜態網站。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;八、localhost 使用與配置&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;可攜程式系統&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何使用可攜程式系統進行倉儲維護。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;動態與靜態網站&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;在 localhost 上運行動態與靜態網站的步驟。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;九、NX 繪圖協同設計&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;安裝與配置&lt;/li&gt;
&lt;li&gt;如何安裝不同版本的 NX。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何配置批次檔案啟動 NX。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;協同設計步驟&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;不同版本 NX 的協同設計操作步驟。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;十、討論與反思&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;討論&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;利用留言系統進行問題交流。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;反思&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;分析協同設計中的問題與經驗。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;十一、參考資源&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;推甄研究所資訊查詢方式。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;十二、實習總結&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;本週實習總結與經驗交流。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</content><category term="w4"></category><category term="網誌編寫"></category><category term="pelican"></category></entry><entry><title>2024 Spring 課程</title><link href="./2024-Spring-w1-blog-tutorial.html" rel="alternate"></link><published>2024-02-18T11:00:00+08:00</published><updated>2024-03-29T08:27:39+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-02-18:./2024-Spring-w1-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;


&lt;h1&gt;內容管理系統2&lt;/h1&gt;
&lt;p&gt;使用者可以自行利用 &lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; 倉儲作為 Template, 建立自己的網站內容管理系統.&lt;/p&gt;
&lt;p&gt;引用網站網址連結的方法:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 在文章中多次引用同一個網站連結時, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;https://github.com/mdecycu/cmsimde_site&lt;/a&gt; - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 也可以使用 Markdown 的標準網站連結使用格式.&lt;/p&gt;
&lt;pre class="brush: python"&gt;
# 引用 Python 程式的方法
for i in range(10):
    print(i, "列出字串")
&lt;/pre&gt;

&lt;p&gt;也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼.&lt;/p&gt;
&lt;p&gt;從 1 累加到 100:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100"&gt;1 add to 100&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;將 iterable 與 iterator &lt;a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438"&gt;相關說明&lt;/a&gt;, 利用 Brython 與 Ace Editor 整理在這個頁面.&lt;/p&gt;
&lt;!-- 導入 brython 程式庫 --&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 FileSaver 與 filereader --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/FileSaver.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/filereader.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 ace --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/ace.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/ext-language_tools.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/mode-python3.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/snippets/python.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 --&gt;
&lt;script src="./../cmsimde/static/Cango-24v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/gearUtils-09.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/SVGpathUtils-6v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/sylvester.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/PrairieDraw.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/javascript"&gt;
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 結束--&gt;&lt;/p&gt;
&lt;!-- editor1 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor1" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run1"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console1"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console1"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd1"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console1"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div1"&gt;&lt;/div&gt;
&lt;!-- editor1 結束 --&gt;
&lt;hr/&gt;&lt;!-- ########################################## --&gt;&lt;p&gt;從 1 累加到 100 part2:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100part2"&gt;1 add to 100&lt;/button&gt;&lt;button id="cango_three_gears"&gt;cango_three_gears&lt;/button&gt;&lt;button id="bsnake"&gt;BSnake&lt;/button&gt;&lt;button id="aitetris"&gt;AI Tetris&lt;/button&gt;&lt;button id="threejsblock"&gt;Rotating Block&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 結束--&gt;&lt;/p&gt;
&lt;!-- editor2 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor2" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename2" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run2"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console2"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console2"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd2"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console2"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div2"&gt;&lt;/div&gt;
&lt;!-- editor2 結束 --&gt;
&lt;hr/&gt;&lt;p&gt;
&lt;script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"&gt;&lt;/script&gt;</content><category term="w1"></category><category term="網誌編寫"></category><category term="pelican"></category></entry></feed>